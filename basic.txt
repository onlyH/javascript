s程序是用unicode字符集编写的

js的数据类型分为：原始和对象

除了数字，字符串，布尔值，null和undefined之外都是对象

对象是属性的集合，每个属性都由“名／直对”构成

如果函数用来初始化（使用new运算符）一个新建的对象，称之为构造函数

每个构造函数定义了一类对象，由构造函数初始化的对象组成的集合，类可以看作是对象类型的子类型

类：function ，array，date，regexp，error

null和undefined是无法拥有方法的值

对象和数组属于可变类型

数字 ，布尔值，null，undefined属于不可变类型

－0=＝0

布尔值包含tostring（）方法

全局属性：undefined，infinity，NaN

全局函数：如isNaN(),parseInt(),eval()

构造函数：如Date(),RegExp(),String(),Object(),Array()

全局对象：如Math(),JSON

存取字符串，数字，布尔值的属性时创建的临时对象称为包装对象

一个值转换为另一个值并不意味着两个值相等

除了null，undefined之外的任何值都有tostring（）方法

toFixed()根据小数点后的指定位数将数字转换为字符串，不用指数计数法

toExponential()使用指数计数法将数字转换为指数形式的字符串

toPrecision()根据指定的有效数字位数将数字转换成字符串

数组到数字的转换则调用tostring（）方法，空数组转换成为空字符串，空字符串转化为数字0

含有一个元素的数组转化为字符串的结果和这个元素转换字符串的结果一样，如果数组只包含一个数字元素，这个数字转换为字符串，再转回数字

局部变量的优先级高于同名的全局变量

js中没有块级作用域

js的函数作用域是指在函数内声明的所有变量在函数体内始终是可见的

使用var声明一个变量时，无法通过delete运算符删除

全局变量是全局对象的属性，局部变量当作跟函数调用相关的某个对象的属性

this关键字是来引用全局对象

全局变量在程序中始终都是有定义的，局部变量在声明它的函数体内以及其所嵌套的函数内始终是有定义的

数组初始化表达式每次计算的值有可能是不同的

对象直接量中的属性名称可以是字符串而不是标识符

函数定义表达式可称为“函数直接量”

函数定义表达式包括关键字function，其后是一对圆括号

属性访问表达式运算得到一个对象属性或一个数组元素的值

任何一个调用表达式都包含一对圆括号和左圆括号之前的表达式，如果这个表达式是一个属性表达式，那么这个调用称为“方法调用”

在方法调用中，执行函数体的时候，作为属性访问主题的对象和数组便是其调用方法内this的指向

对象创建表达式创建一个对象并调用一个构造函数初始化新对象的属性

函数调用表达式和对象创建表达式是有副作用的

一元操作符，赋值，三元条件运算符都具有从右至左的结合性

求余运算也叫模运算，模就是余数

异或是指第一个操作符为true或第二个为true，但两者不能同时为true

按位非～对一个值使用～运算符相当于改变他的符号并减一

将一个值左移1位相当于它乘以2，两位乘以4，7<<2=28

右移相反 7>>1=3

关系运算符用于测试两个值之间的关系，返回一个布尔值，通常在if，while，for语句中使用，以控制程序的执行流程

js对象的比较是引用的比较，不是值的比较

in运算符希望他的左操作数是一个字符串或可以转换为字符串，右操作符是一个对象，如果右侧的对象拥有一个名为左操作数值的属性名，那么表达式返回turn

instanceof与之相反


纯属个人积累若有错误的地方欢迎指出，共同学习！